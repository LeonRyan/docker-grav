# 130-nginx2.conf
#
# Start up nginx.  This is a "simple" service, so chaperone will monitor Nginx and restart
# it if necessary.  
#
# In the case where no USER variable is specified, we run as the www-data user.

settings: {
  env_set: {
    PHPRC: "$(APPS_DIR)/etc/php-cli.ini",
    NGINX_LOG_DIR: "$(VAR_DIR)/log/nginx",
    PHPFFM_SOCKET: "/tmp/php-fpm.sock",
    HTTPD_SERVER_NAME: nginx,
  }  
}

phpfpm.service: {
  type: forking,
  process_timeout: 15,
  command: "/usr/bin/php-fpm --daemonize --fpm-config $(APPS_DIR)/etc/php-fpm.conf",
  pidfile: "$(PHPFPM_PID_FILE)",
  restart: true,
  uid: "$(USER:-www-data)",
  env_set: {
    PHPFPM_PID_FILE: "/tmp/php-fpm.pid",
    PHPFPM_LOG_DIR: "$(VAR_DIR)/log/nginx",
  },
  env_unset: [ "PHPRC" ],
  before: nginx.service,
}

nginx.service: {
  type: forking,
  process_timeout: 15,
  command: "$(APPS_DIR)/etc/start_nginx.sh",	       
  pidfile: "$(NGINX_PID_FILE)",
  kill_signal: SIGQUIT, 	# graceful shutdown
  restart: true,
  optional: true,
  enabled: true,
  uid: "$(USER:-www-data)",
  env_set: {
    NGINX_SITES_DIR: "$(APPS_DIR)/www",
    NGINX_LOG_DIR: "$(VAR_DIR)/log/nginx",
    NGINX_PID_FILE: "/tmp/nginx.pid"
  },
  # If Nginx does not require a database, you can leave this out.
  after: database,
}

# Use daily logging (the %d) so that log rotation isn't so important.  Logs
# will be created automatically for each day where they are requied.
# See 300-logrotate.conf if you want to enable log rotation as a periodic
# job.  Note that chaperone watches for logs which are rotated and will
# automatically open a new file if the old one is rotated.
#
# Write logs either as the USER= user, or as www-data.

nginx.logging: {
  enabled: true,
  selector: 'local7.*;*.!err',
  file: '$(NGINX_LOG_DIR)/nginx-%d.log',
  uid: "$(USER:-www-data)",
}

nginx.logging: {
  enabled: true,
  selector: 'local7.err',
  stderr: true,
  file: '$(NGINX_LOG_DIR)/error-%d.log',
  uid: "$(USER:-www-data)",
}
